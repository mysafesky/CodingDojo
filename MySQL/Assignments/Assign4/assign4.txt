-- Script for forward engineering (ERD Diagram to real schema and table)
-- (Note: InnoDB engine can't be used for two foreign key to same ref. in other table)
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema friend
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema friend
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `friend` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `friend` ;

-- -----------------------------------------------------
-- Table `friend`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `friend`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `friend`.`friendships`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `friend`.`friendships` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `friend_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_friendships_users_idx` (`friend_id` ASC, `user_id` ASC))
ENGINE = MyISAM;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



-- Insert fake data
INSERT INTO `friend`.`friendships` (`id`, `user_id`, `friend_id`) VALUES ('1', '1', '2');
INSERT INTO `friend`.`friendships` (`id`, `user_id`, `friend_id`) VALUES ('2', '1', '3');
INSERT INTO `friend`.`friendships` (`id`, `user_id`, `friend_id`) VALUES ('3', '1', '4');
INSERT INTO `friend`.`friendships` (`id`, `user_id`, `friend_id`) VALUES ('4', '4', '1');
INSERT INTO `friend`.`friendships` (`id`, `user_id`, `friend_id`) VALUES ('5', '3', '1');
INSERT INTO `friend`.`friendships` (`id`, `user_id`, `friend_id`) VALUES ('6', '2', '1');


INSERT INTO `friend`.`users` (`id`, `first_name`, `last_name`) VALUES ('1', 'Chris', 'Baker');
INSERT INTO `friend`.`users` (`id`, `first_name`, `last_name`) VALUES ('2', 'Diana', 'Smith');
INSERT INTO `friend`.`users` (`id`, `first_name`, `last_name`) VALUES ('3', 'James', 'Johnson');
INSERT INTO `friend`.`users` (`id`, `first_name`, `last_name`) VALUES ('4', 'Jessica', 'Davidson');

-- Query Code
SELECT users.id,users.first_name, users.last_name,user2.first_name as friend_first_name, user2.last_name as friend_last_name
FROM users 
LEFT JOIN friendships 
ON users.id=friendships.user_id 
LEFT JOIN users as user2 
ON friendships.friend_id = user2.id
ORDER by users.first_name ASC, user2.last_name ASC;